####################################################################################################
## Notes to self - shouldn't really be in this file, but quick and dirty place to store it for now
## Mostly notes about how to adapt .travis.yml to a plain Ubuntu build
####################################################################################################


##### TODO: Compare all against Travis log
##### TODO: Go back to comparing with README.md for both grasshopper and grasshopper-ui


##### General Environment #####

# http://docs.travis-ci.com/user/ci-environment/#CI-environment-OS
# Travis CI virtual machines are based on Ubuntu 12.04 LTS Server Edition 64 bit ...

# http://docs.travis-ci.com/user/ci-environment/#Environment-common-to-all-VM-images
# this explains how some stuff is already magically there (like git, PhantomJS etc)


##### Installing Node.js ...

language: node_js
node_js:
  - "0.10.33"
# https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
# https://deb.nodesource.com/setup magically (scarily!) configures apt-get to just do the right thing (urgh) - but nicer than non apt ??
# maybe do this locally/fork it locally etc - although it will be different from travis.
# TRY Paste this at end of sources.list for now
deb https://deb.nodesource.com/node precise main
deb-src https://deb.nodesource.com/node precise main
# then
curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
apt-get update
apt-cache showpkg nodejs # shows 0.10.33 at the moment
# Travis log appears to use "nvm install 0.10.33"

# http://achinth.com/post/58263924087/installing-node-js-using-nvm-on-ubuntu
# https://raw.githubusercontent.com/creationix/nvm/master/install.sh # argh more scary run stuff off the web as root


branches:
  only:
    - master

###### PostgreSQL

addons:
  postgresql: "9.3"
# Is "addon" the same as just psql or is it an addon for node.js?
apt-get install postgresql # actually installs 9.1 ??
# [start postgresql is built in]
# [lazy posgresql setup variation below]
apt-get install nodejs # actually installs 0.6.12 ?? see above to fix it
# [ignore grunt-cli for now]

###### Git
apt-get install git

before_install:

# TODO: Parameterise these hostnames, as they are referred to in other files?
  # Create virtual hosts
  - sudo sed -i "2i127.0.0.2  2014.cam.timetable.grasshopper.com" /etc/hosts
  - sudo sed -i "2i127.0.0.2  2013.cam.timetable.grasshopper.com" /etc/hosts
  - sudo sed -i "2i127.0.0.2  2014.timetable.cam.ac.uk" /etc/hosts
  - sudo sed -i "2i127.0.0.1  admin.grasshopper.com" /etc/hosts
  - cat /etc/hosts

  # Install test dependencies
## TODO: work out whether we need these /test/ dependencies on a production server?
# sudo?
  - npm install -g casperjs
# ALSO
(sudo) npm install -g phantomjs

  # Show the CasperJS and PhantomJS version for debugging purposes
  - casperjs --version
  - phantomjs --version

  # Prepare the machine
  - sudo apt-get update
  - sudo apt-get install build-essential
  - cd /usr/local/lib

  # Get Apache HTTP-server 2.4
  - sudo wget http://lib.gblearn.com/apache/httpd-2.4.10.tar.gz -q
  - sudo tar xfz httpd-2.4.10.tar.gz
  - cd httpd-2.4.10/srclib/

  # Download dependencies
  - sudo wget http://lib.gblearn.com/apache/apr/apr-1.5.1.tar.gz -q
  - sudo wget http://lib.gblearn.com/apache/apr/apr-util-1.5.3.tar.gz -q
  - sudo wget http://lib.gblearn.com/apache/pcre/pcre-8.34.tar.gz -q

  # Install and configure APR
  - echo 'Installing APR'
  - sudo tar xfz ./apr-1.5.1.tar.gz
  - cd apr-1.5.1
  - sudo ./configure
  - sudo make --silent
  - sudo make install --silent
  - cd ../

  # Install and configure APR util
  - echo 'Installing APR util'
  - sudo tar xfz ./apr-util-1.5.3.tar.gz
  - cd apr-util-1.5.3
  - sudo ./configure --with-apr=/usr/local/apr/bin/apr-1-config
  - sudo make --silent
  - sudo make install --silent
  - cd ../

  # Install and configure PCRE
  - echo 'Installing PCRE'
  - sudo tar xfz pcre-8.34.tar.gz
  - cd pcre-8.34
  - sudo ./configure --prefix=/usr/local/pcre
  - sudo make --silent
  - sudo make install --silent
  - cd ../..

  # Install and configure Apache HTTPD 2.4
  - echo 'Installing Apache'
  - sudo ./configure --prefix=/usr/local/apache2 --with-pcre=/usr/local/pcre --enable-so
  - sudo make --silent
  - sudo make install --silent
  - cd /usr/local/apache2/conf
  - sudo mkdir sites-enabled

  # Install Grasshopper
  - echo 'Installing Grasshopper'
  - cd ~/build/CUL-DigitalServices
  - git clone --branch master --depth=1 git://github.com/CUL-DigitalServices/grasshopper.git ./grasshopper
  - cd ./grasshopper
  - npm install --production

  # Configure postgres
  - echo 'Creating database'
  - psql -c 'CREATE DATABASE grasshoppertest;' -U postgres
  - echo "config.db.username = 'postgres';" >> config.js

  # Install Grasshopper UI
  - echo 'Installing Grasshopper UI'
  - cd ~/build/CUL-DigitalServices/grasshopper-ui
  - npm install
  - grunt configApache
  - sudo cp ./target/optimized/apache/httpd.conf /usr/local/apache2/conf/httpd.conf
  - sudo cp -R ./target/optimized/apache/app_*.conf /usr/local/apache2/conf/sites-enabled

  # Start Apache
  - sudo /usr/local/apache2/bin/apachectl start
  - sleep 5

script:
  - grunt test

after_success:
  # Package and upload to Amazon S3
  - ./etc/scripts/travis-upload.sh

after_script:
  - grunt coveralls

notifications:
  email:
    - bp323@cam.ac.uk
    - md623@cam.ac.uk
    - rwlc3@cam.ac.uk
  irc:
    channels:
      - "irc.freenode.org#ucam-ds"
    skip_join: true
